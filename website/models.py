from . import db
from flask_login import UserMixin
import datetime

class Note(db.Model): # type: ignore
    id = db.Column(db.Integer, primary_key=True)
    data = db.Column(db.String(100000)) 
    date = db.Column(db.DateTime, default=datetime.datetime.now)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))

class To_Dos(db.Model): # type: ignore
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(200), nullable = False)
    desc = db.Column(db.String(500), nullable = False)
    date_created = db.Column(db.DateTime, default = datetime.datetime.now)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))
    def __repr__(self) -> str:
        return f"{self.id} - {self.title}"
    
class Appoint(db.Model): # type: ignore
    id = db.Column(db.Integer, primary_key=True)
    t = db.Column(db.String(200), nullable = False)
    d = db.Column(db.String(500), nullable = False)
    dc = db.Column(db.DateTime, default = datetime.datetime.now)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))
    def __repr__(self) -> str:
        return f"{self.id} - {self.t}"

class User(db.Model, UserMixin): # type: ignore
    id = db.Column(db.Integer, primary_key=True)
    image_file = db.Column(db.String(50))
    image_data = db.Column(db.LargeBinary)
    image_mimetype = db.Column(db.Text, nullable=False)
    email = db.Column(db.String(150), unique=True)
    password = db.Column(db.String(150))
    username = db.Column(db.String(150))
    person = db.Column(db.String(150))
    date = db.Column(db.DateTime, default=datetime.datetime.now)
    uploads = db.relationship('Upload')
    diabetes = db.relationship('Diabetes')
    hearts = db.relationship('Heart')
    parkinsons = db.relationship('Park')
    notes = db.relationship('Note')
    todos = db.relationship('To_Dos')
    appoints = db.relationship('Appoint')

class Diabetes(db.Model): # type: ignore
    id = db.Column(db.Integer, primary_key=True)
    pregnancies = db.Column(db.Integer)
    glucose = db.Column(db.Integer)
    bloodpressure = db.Column(db.Integer)
    skinthickness = db.Column(db.Integer)
    insulin = db.Column(db.Integer)
    BMI = db.Column(db.Integer)
    DiabetesPedigreeFunction = db.Column(db.Integer)
    age = db.Column(db.Integer)
    pred_diabetes = db.Column(db.Integer)
    date_created = db.Column(db.DateTime, default = datetime.datetime.now)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))

class Heart(db.Model): # type: ignore
    id = db.Column(db.Integer, primary_key=True)
    age = db.Column(db.Integer)
    sex = db.Column(db.Integer)
    cp = db.Column(db.Integer)
    rbp = db.Column(db.Integer)
    chol = db.Column(db.Integer)
    fbs = db.Column(db.Integer)
    recg = db.Column(db.Integer)
    mhra = db.Column(db.Integer)
    exia = db.Column(db.Integer)
    oldpeak = db.Column(db.Integer)
    slope = db.Column(db.Integer)
    vcf = db.Column(db.Integer)
    thal = db.Column(db.Integer)
    pred_heart = db.Column(db.Integer)
    date_created = db.Column(db.DateTime, default = datetime.datetime.now)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))

class Park(db.Model): # type: ignore
    id = db.Column(db.Integer, primary_key=True)
    mdvp_fo = db.Column(db.Integer)
    mdvp_fhi = db.Column(db.Integer)
    mdvp_flo = db.Column(db.Integer)
    mdvp_jitter = db.Column(db.Integer)
    mdvp_jitter_abs = db.Column(db.Integer)
    mdvp_rap = db.Column(db.Integer)
    mdvp_ppq = db.Column(db.Integer)
    jitter_ddp = db.Column(db.Integer)
    mdvp_shimmer = db.Column(db.Integer)
    mdvp_shimmer_db = db.Column(db.Integer)
    mdvp_shimmer_apq3 = db.Column(db.Integer)
    mdvp_shimmer_apq5 = db.Column(db.Integer)
    mdvp_apq = db.Column(db.Integer)
    shimmer_dda = db.Column(db.Integer)
    nhr = db.Column(db.Integer)
    hnr = db.Column(db.Integer)
    rpde = db.Column(db.Integer)
    dfa = db.Column(db.Integer)
    spread1 = db.Column(db.Integer)
    spread2 = db.Column(db.Integer)
    d2 = db.Column(db.Integer)
    ppe = db.Column(db.Integer)
    pred_park = db.Column(db.Integer)
    date_created = db.Column(db.DateTime, default = datetime.datetime.now)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))

class Upload(db.Model):    
    id = db.Column(db.Integer, primary_key=True)
    my_name = db.Column(db.String(150))
    age = db.Column(db.Integer)
    dob = db.Column(db.String(50))
    gender = db.Column(db.String(50))
    height = db.Column(db.Integer)
    weight = db.Column(db.Integer)
    blood_grp = db.Column(db.String(50))
    heart_attack = db.Column(db.Integer)
    region = db.Column(db.String(50))
    pincode = db.Column(db.String(50))
    allergies = db.Column(db.String(1000))
    medic = db.Column(db.String(1000))
    past_medic = db.Column(db.String(1000))
    # image_file = db.Column(db.String(50))
    # image_data = db.Column(db.LargeBinary)
    # image_mimetype = db.Column(db.Text, nullable=False)
    # pdf_file = db.Column(db.String(50))
    # pdf_data = db.Column(db.LargeBinary)
    # pdf_mimetype = db.Column(db.Text, nullable=False)
    # emer_name = db.Column(db.String(150))
    # emer_phone = db.Column(db.String(150))
    # emer_email = db.Column(db.String(150))
    date = db.Column(db.DateTime, default=datetime.datetime.now)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))
